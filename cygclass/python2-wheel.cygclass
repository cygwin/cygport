################################################################################
#
# python2-wheel.cygclass - for building Wheels for Python 2
#
# Part of cygport - Cygwin packaging application
# Copyright (C) 2006-2020 Cygport authors
# Provided by the Cygwin project <https://cygwin.com/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <https://www.gnu.org/licenses/>.
#
################################################################################

#****h* Cygclasses/python2-wheel.cygclass
#  DESCRIPTION
#  Wheels are the new standard for installing Python libraries and programs.
#  The build is defined by a setup.py file in the top source directory, which
#  controls the installation of files and the building of C Python extensions.
#  Many such packages are hosted on the Python Package Index (PyPI).
#
#  This cygclass handles the building of wheel-based Python 2 packages, for
#  use by packages which do not yet support Python 3, or for backport module
#  packages which are not needed with Python 3.  Python module packages which
#  support both Python 2 and 3 should use python-wheel.cygclass instead.
#  EXAMPLE
#    inherit python2-wheel
#    
#    NAME="python-futures"
#    VERSION=3.1.1
#    RELEASE=1
#    CATEGORY="Python"
#    SUMMARY="Backport of Python concurrent.futures to 2.7"
#    DESCRIPTION="The concurrent.futures module provides a high-level interface
#    for asynchronously executing callables.  This module is a backport for
#    Python 2.7."
#    
#    ARCH=noarch
#  INHERITS
#  python2.cygclass, python-wheel.cygclass
#  REQUIRES
#  python2, python2-pip
#****
inherit python2
PYTHON_WHEEL_VERSIONS=${PYTHON2_VERSION}
inherit python-wheel

#****C* python2-wheel.cygclass/python2_wheel_compile
#  SYNOPSIS
#  python2_wheel_compile [OPTIONS]
#  DESCRIPTION
#  Runs the setup.py 'bdist_wheel' command, to which any arguments are passed.
#****
python2_wheel_compile() { python_wheel_compile "${@}" ; }

#****I* python2-wheel.cygclass/python2_wheel_install
#  SYNOPSIS
#  python2_wheel_install [OPTIONS]
#  DESCRIPTION
#  Installs the previously built wheel into $D with 'pip2 install'.
#****
python2_wheel_install() { python_wheel_install ; }

#****o* python2-wheel.cygclass/src_compile (python2-wheel)
#  DEFINITION
src_compile() {
	lndirs
	cd ${B}
	python2_wheel_compile
}
#****

#****o* python2-wheel.cygclass/src_install (python2-wheel)
#  DEFINITION
src_install() {
	cd ${B}
	python2_wheel_install
}
#****

readonly -f python2_wheel_compile python2_wheel_install
